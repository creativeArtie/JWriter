(* About===============================================================
 * This uses the Extended Backusâ€“Naur form with the following syntax
 * definition       =
 * concatenation    ,
 * termination      ;
 * alternation      |
 * optional         [ ... ]
 * repetition       { ... }
 * grouping         ( ... )
 * terminal string  " ... "
 * terminal string  ' ... '
 * comment          (* ... *)
 * special sequence ? ... ?
 * exception        -
 *
 * Heading simplification: the extact heading syntax for each section are not
 * Heading simplification: shown because it will create will too much rules with
 * Heading simplification: very similar syntaxes.
 * Heading simplification: (grep 'Heading simplification' for information)
 *)

Meta = {Data};
Data = DataSpan, [{\n, DataSpan}], [\n];

DataSpan = (DataArea, DataType, Format1) | (DataMeta, DataType, Content)
DataArea = ("head-", ("top     |" | "centre  |" | "bottom  |") ) |
           ("text-", ("header  |" | "ender   |" ) ) |
           ("cite-",  "header  |" );
DataMeta =  "meta-", ("author  |" | "keywords|" | "subject |" | "title   |";
DataType = "right |" | "left  |" | "center|" | "text  |";

Manuscript = (SectionHead1), [{\n, (SectionHead)}], [\n];

(* Heading simplification: SectionHead1's LevelLinedHeading == level 1 *)
SectionHead1 = [LevelLinedHeading], [SectionContent], [SectionScene],
               [SectionHead];
(* Heading simplification: SectionHead's child level > parent level *)
SectionHead = LevelLinedHeading [SectionContent], [SectionScene], [SectionHead];
SectionScene = LevelLinedOutline, [SectionContent];
SectionContent = (LinedParagraph | LinedQuote | LinedBreak | LinedAgenda |
    LinedFootnote | LinedEndnote | LinedLink | LevelLinedNumbered |
    LevelLinedBullet | Note), [ "\n", SectionContent];

LinedParagraph = Content;
LinedQuote     = ">", [Format1];
LinedBreak     = "***", \n;
LinedAgenda    = "!!", [Content];
LinedFootnote  = "!^", Directory, [[":"], Content];
LinedEndnote   = "!*", Directory, [[":"], Content];
LinedLink      = "!@", Directory, [[":"], Content];

(* Heading simplification: HeadingStart & OutlineStart produces the levels. *)
LevelLinedHeading   = HeadingStart, [LineId];
LevelLinedOutline   = OutlineStart, [LineId];
LevelLinedNumbered  = NumberedStart, [Format2];
LevelLinedBullet    = BulletStart, [Format2];

(* Heading simplification: Levels are decided by number of repeat characters. *)
(*            level   1      2     3     4     5     6         *)
HeadingStart  =      "=", [ "=", ["=", ["=", ["=", ["="] ] ] ] ];
OutlineStart  = "!", "#", [ "#", ["#", ["#", ["#", ["#"] ] ] ] ];
NumberedStart =      "#", [ "#", ["#", ["#", ["#", ["#"] ] ] ] ];
BulletStart   =      "-", [ "-", ["-", ["-", ["-", ["-"] ] ] ] ]-;
LineId = (Spaces, [ ["@"], [Directory], [":", [Format2], [Edition]] ]) |
        ([Format2], [Edition]);

Note     = (LinedNoteHead, [{\n NoteLine}]) |
           (NoteLine, [{\n LinedNoteLine}];
NoteLine = LinedNote | LinedCite;
LinedNoteHead = "!%", Spaces, "@", Directory, [":", [Format1]];
LinedNoteLine = "!%", Format1;

LinedCite = "!>",
    ((InfoFieldFootnote | InfoFieldIntext), [[Spaces, [":"]] InfoDataText]) |
    (InfoFieldSource, [[Spaces, [":"], InfoDataFormatted]) |
    (InfoFieldRef, [Spaces, [":"], InfoDataRef) |
    InfoFieldError;
InfoFieldFootnote = Spaces, "footnote";
InfoFieldInText   = Spaces, "in-text";
InfoFieldSource   = Spaces, "source";
InfoFieldRef      = Spaces, "ref";
InfoFieldError    = Content, -\n;
InfoDataText      = Content, -\n;
InfoDataFormatted = Format2, -\n;
InfoDataRef       = Directory

(* Implemented as Format* classes *)
Format1 = {FormatAgenda | "**" | "*" | "_" | "`" | FormatContent |
           FormatDirectLink | FormatRefLink | FormatReference
          }, (-\? | -\n);
Format2 = {FormatAgenda |  "**" | "*" | "_" | "`" | FormatContent |
           FormatDirectLink | FormatRefLink | FormatReference |
           FormatFootnote | FormatEndnote | FormatNote
          }, (-\? | -\n);
FormatReference  = "{%", [Content], ( "%}" | -\n);
FormatNote       = FormatResearch | FormatFootnote | FomratEndnote;
FormatEndnote    = "{^", [Directory], ("}" | -\n );
FormatFootnote   = "{*", [Directory], ("}" | -\n );
FormatResearch   = "{@", Directory, ("}" | -\n );
FormatRefLink    =  "<@", [Directory], (">" | -\n);
FormatDirectLink =  "<", [Content], (">" | -\n);
FormatData       = "{", [Content], "}"
FormatContent    = Basic
FormatAgenda     = "{!", [ Content],  ("}" | -\n );

(* Implemented as Content*, Directory* and Edition* classes *)
Edition   = ("#STUB" | "#DRAFT" | "#FINAL" | "#"), [Content];
Directory = Content, {"-", Content};
Content   = Basic;

(* Implemented as Basic* class *)
Basic  = {Raw, Escape};
Raw    = {-("\" | -\? | \n )};
Escape = "\", ?any unicode character?;

(* characters for this file only *)
\n     = ? new line ?
\t     = ? new tab ?
\?     = ? next terminal string ?
Spaces = [{? white space ?}];
